{"ast":null,"code":"// Promises\n\n//resolve: Es el resultado positivo del callback\n// reject: Es el resultado negativo del callback\n\nimport { getHeroebyId, getHerosbyOwners2 } from \"./bases/08-import-export\";\nconst promesa = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const numRandom = Math.random() * 10;\n    let heroe = {};\n    console.log(numRandom);\n    if (numRandom > 5) {\n      heroe = getHeroebyId(2);\n      resolve(heroe);\n      console.log(\"La promesa se cumplió\");\n    } else {\n      // reject(\"La promesa falló\");\n      const heroesOwner = getHerosbyOwners2(\"DC\");\n      reject(heroesOwner);\n    }\n  }, 1000);\n});\n\n// console.log(promesa);\n\n// Hay Tres métodos muy importante\n\n// Then: Se ejecuta si la promesa se resolvión de forma positiva\n\n// Catch: Se ejecuta si la promesa se resolvión de forma negativa\n\n// Finally: Se Ejecuta siempre independientemente de si la promesa se resolvión de forma positiva o de forma negativa\n\npromesa.then(heroe => {\n  console.log(\"Then de la promesa\");\n  console.log(heroe);\n}).catch(err => {\n  console.warn(\"Catch de la promesa\");\n  console.warn(\"No se Localizó el Heroe Buscado, pero por Contrato Encontramos los Heroes de 'DC': \");\n  console.log(err);\n});\nconst getHeroebyIdAsync = id => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const heroe = getHeroebyId(id);\n      if (heroe) {\n        resolve(heroe);\n      } else {\n        reject(`No se encontró el Heroe con ID: ${id}`);\n      }\n    }, 900);\n  });\n};\ngetHeroebyIdAsync(24).then(heroe => {\n  console.log(\"Se encontró el HEROE\");\n  console.log(heroe);\n}).catch(err => {\n  console.warn(\"NO SE ENCONTRÓ EL HÉROE\");\n  console.warn(\"No se Localizó el Heroe Buscado, pero por Contrato Encontramos los Heroes de 'DC': \");\n  console.log(err);\n}).finally(console.error);","map":{"version":3,"names":["getHeroebyId","getHerosbyOwners2","promesa","Promise","resolve","reject","setTimeout","numRandom","Math","random","heroe","console","log","heroesOwner","then","catch","err","warn","getHeroebyIdAsync","id","finally","error"],"sources":["/Users/josemanuelcepedayanez/Documents/02_Programacion/01_Curso_Programacion/20240829_DevTalles_React_Hook_MERN/02_Intro_JavaScript/intro-javascript/src/index.js"],"sourcesContent":["// Promises\n\n//resolve: Es el resultado positivo del callback\n// reject: Es el resultado negativo del callback\n\nimport { getHeroebyId, getHerosbyOwners2 } from \"./bases/08-import-export\";\n\nconst promesa = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const numRandom = Math.random() * 10;\n    let heroe = {};\n    console.log(numRandom);\n    if (numRandom > 5) {\n      heroe = getHeroebyId(2);\n      resolve(heroe);\n      console.log(\"La promesa se cumplió\");\n    } else {\n      // reject(\"La promesa falló\");\n      const heroesOwner = getHerosbyOwners2(\"DC\");\n      reject(heroesOwner);\n    }\n  }, 1000);\n});\n\n// console.log(promesa);\n\n// Hay Tres métodos muy importante\n\n// Then: Se ejecuta si la promesa se resolvión de forma positiva\n\n// Catch: Se ejecuta si la promesa se resolvión de forma negativa\n\n// Finally: Se Ejecuta siempre independientemente de si la promesa se resolvión de forma positiva o de forma negativa\n\npromesa\n  .then((heroe) => {\n    console.log(\"Then de la promesa\");\n    console.log(heroe);\n  })\n  .catch((err) => {\n    console.warn(\"Catch de la promesa\");\n    console.warn(\n      \"No se Localizó el Heroe Buscado, pero por Contrato Encontramos los Heroes de 'DC': \"\n    );\n    console.log(err);\n  });\n\nconst getHeroebyIdAsync = (id) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const heroe = getHeroebyId(id);\n      if (heroe) {\n        resolve(heroe);\n      } else {\n        reject(`No se encontró el Heroe con ID: ${id}`);\n      }\n    }, 900);\n  });\n};\n\ngetHeroebyIdAsync(24)\n  .then((heroe) => {\n    console.log(\"Se encontró el HEROE\");\n    console.log(heroe);\n  })\n  .catch((err) => {\n    console.warn(\"NO SE ENCONTRÓ EL HÉROE\");\n    console.warn(\n      \"No se Localizó el Heroe Buscado, pero por Contrato Encontramos los Heroes de 'DC': \"\n    );\n    console.log(err);\n  })\n  .finally(console.error);\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA,SAASA,YAAY,EAAEC,iBAAiB,QAAQ,0BAA0B;AAE1E,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAC/CC,UAAU,CAAC,MAAM;IACf,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;IACpC,IAAIC,KAAK,GAAG,CAAC,CAAC;IACdC,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;IACtB,IAAIA,SAAS,GAAG,CAAC,EAAE;MACjBG,KAAK,GAAGV,YAAY,CAAC,CAAC,CAAC;MACvBI,OAAO,CAACM,KAAK,CAAC;MACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,MAAM;MACL;MACA,MAAMC,WAAW,GAAGZ,iBAAiB,CAAC,IAAI,CAAC;MAC3CI,MAAM,CAACQ,WAAW,CAAC;IACrB;EACF,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,CAAC;;AAEF;;AAEA;;AAEA;;AAEA;;AAEA;;AAEAX,OAAO,CACJY,IAAI,CAAEJ,KAAK,IAAK;EACfC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjCD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AACpB,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;EACdL,OAAO,CAACM,IAAI,CAAC,qBAAqB,CAAC;EACnCN,OAAO,CAACM,IAAI,CACV,qFACF,CAAC;EACDN,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;AAClB,CAAC,CAAC;AAEJ,MAAME,iBAAiB,GAAIC,EAAE,IAAK;EAChC,OAAO,IAAIhB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACf,MAAMI,KAAK,GAAGV,YAAY,CAACmB,EAAE,CAAC;MAC9B,IAAIT,KAAK,EAAE;QACTN,OAAO,CAACM,KAAK,CAAC;MAChB,CAAC,MAAM;QACLL,MAAM,CAAC,mCAAmCc,EAAE,EAAE,CAAC;MACjD;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ,CAAC;AAEDD,iBAAiB,CAAC,EAAE,CAAC,CAClBJ,IAAI,CAAEJ,KAAK,IAAK;EACfC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnCD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AACpB,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;EACdL,OAAO,CAACM,IAAI,CAAC,yBAAyB,CAAC;EACvCN,OAAO,CAACM,IAAI,CACV,qFACF,CAAC;EACDN,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;AAClB,CAAC,CAAC,CACDI,OAAO,CAACT,OAAO,CAACU,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}