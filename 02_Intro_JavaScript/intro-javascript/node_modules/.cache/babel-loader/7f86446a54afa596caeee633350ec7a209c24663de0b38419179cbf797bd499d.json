{"ast":null,"code":"// Promises\n\n//resolve: Es el resultado positivo del callback\n// reject: Es el resultado negativo del callback\n\nimport { getHeroebyId, getHerosbyOwners } from \"./bases/08-import-export\";\nconst promesa = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const numRandom = Math.random() * 10;\n    console.log(numRandom);\n    if (numRandom > 5) {\n      const heroe = getHeroebyId(2);\n      resolve(heroe);\n      console.log(\"La promesa se cumplió\");\n    } else {\n      // reject(\"La promesa falló\");\n      const heroesOwner = getHerosbyOwners(\"DC\");\n      console.log(heroesOwner);\n    }\n  }, 1000);\n});\n\n// console.log(promesa);\n\n// Hay Tres métodos muy importante\n\n// Then: Se ejecuta si la promesa se resolvión de forma positiva\n\n// Catch: Se ejecuta si la promesa se resolvión de forma negativa\n\n// Finally: Se Ejecuta siempre independientemente de si la promesa se resolvión de forma positiva o de forma negativa\n\npromesa.then(heroe => {\n  console.log(\"Then de la promesa\");\n  console.log(heroe);\n});\npromesa.catch(() => {\n  console.log(\"Catch de la promesa\");\n});","map":{"version":3,"names":["getHeroebyId","getHerosbyOwners","promesa","Promise","resolve","reject","setTimeout","numRandom","Math","random","console","log","heroe","heroesOwner","then","catch"],"sources":["/Users/josemanuelcepedayanez/Documents/02_Programacion/01_Curso_Programacion/20240829_DevTalles_React_Hook_MERN/02_Intro_JavaScript/intro-javascript/src/index.js"],"sourcesContent":["// Promises\n\n//resolve: Es el resultado positivo del callback\n// reject: Es el resultado negativo del callback\n\nimport { getHeroebyId, getHerosbyOwners } from \"./bases/08-import-export\";\n\nconst promesa = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const numRandom = Math.random() * 10;\n    console.log(numRandom);\n    if (numRandom > 5) {\n      const heroe = getHeroebyId(2);\n      resolve(heroe);\n      console.log(\"La promesa se cumplió\");\n    } else {\n      // reject(\"La promesa falló\");\n      const heroesOwner = getHerosbyOwners(\"DC\");\n      console.log(heroesOwner);\n    }\n  }, 1000);\n});\n\n// console.log(promesa);\n\n// Hay Tres métodos muy importante\n\n// Then: Se ejecuta si la promesa se resolvión de forma positiva\n\n// Catch: Se ejecuta si la promesa se resolvión de forma negativa\n\n// Finally: Se Ejecuta siempre independientemente de si la promesa se resolvión de forma positiva o de forma negativa\n\npromesa.then((heroe) => {\n  console.log(\"Then de la promesa\");\n  console.log(heroe);\n});\n\npromesa.catch(() => {\n  console.log(\"Catch de la promesa\");\n});\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,0BAA0B;AAEzE,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAC/CC,UAAU,CAAC,MAAM;IACf,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;IACpCC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACtB,IAAIA,SAAS,GAAG,CAAC,EAAE;MACjB,MAAMK,KAAK,GAAGZ,YAAY,CAAC,CAAC,CAAC;MAC7BI,OAAO,CAACQ,KAAK,CAAC;MACdF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,MAAM;MACL;MACA,MAAME,WAAW,GAAGZ,gBAAgB,CAAC,IAAI,CAAC;MAC1CS,OAAO,CAACC,GAAG,CAACE,WAAW,CAAC;IAC1B;EACF,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,CAAC;;AAEF;;AAEA;;AAEA;;AAEA;;AAEA;;AAEAX,OAAO,CAACY,IAAI,CAAEF,KAAK,IAAK;EACtBF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjCD,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;AACpB,CAAC,CAAC;AAEFV,OAAO,CAACa,KAAK,CAAC,MAAM;EAClBL,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACpC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}